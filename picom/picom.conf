###########################################
#
#  ██████╗ ██╗ ██████╗ ██████╗ ███╗   ███╗
#  ██╔══██╗██║██╔════╝██╔═══██╗████╗ ████║
#  ██████╔╝██║██║     ██║   ██║██╔████╔██║
#  ██╔═══╝ ██║██║     ██║   ██║██║╚██╔╝██║
#  ██║     ██║╚██████╗╚██████╔╝██║ ╚═╝ ██║
#  ╚═╝     ╚═╝ ╚═════╝ ╚═════╝ ╚═╝     ╚═╝
#
###########################################


#################################
#
# Backend
#
#################################

backend = "glx";

#################################
#
# GLX backend
#
#################################
#

corner-radius = 0;
glx-no-stencil = true;

# GLX backend: Copy unmodified regions from front buffer instead of redrawing them all.
# My tests with nvidia-drivers show a 10% decrease in performance when the whole screen is modified,
# but a 20% increase when only 1/4 is.
# My tests on nouveau show terrible slowdown.
glx-copy-from-front = false;

# GLX backend: Use MESA_copy_sub_buffer to do partial screen update.
# My tests on nouveau shows a 200% performance boost when only 1/4 of the screen is updated.
# May break VSync and is not available on some drivers.
# Overrides --glx-copy-from-front.
# glx-use-copysubbuffermesa = true;

# GLX backend: Avoid rebinding pixmap on window damage.
# Probably could improve performance on rapid window content changes, but is known to break things on some drivers (LLVMpipe).
# Recommended if it works.
# glx-no-rebind-pixmap = true;

#glx-swap-method = "undefined";

#################################
#
# Shadows
#
#################################

# Enabled client-side shadows on windows.
shadow = true;
# The blur radius for shadows. (default 12)
shadow-radius = 25;
# The left offset for shadows. (default -15)
shadow-offset-x = -15;
# The top offset for shadows. (default -15)
shadow-offset-y = -15;
# The translucency for shadows. (default .75)
shadow-opacity = 1.0;

log-level = "warn";
#change your username here
#log-file = "/home/erik/.config/compton.log";
shadow-exclude = [
	"class_g ?= 'ulauncher'"
];


# Detect _NET_WM_OPACITY on client windows, useful for window managers not passing _NET_WM_OPACITY of client windows to frame windows.
# This prevents opacity being ignored for some apps.
# For example without this enabled my xfce4-notifyd is 100% opacity no matter what.
detect-client-opacity = true;

#################################
#
# Opacity
#
#################################

#inactive-opacity = 1.00;
#active-opacity = 1.00;
inactive-opacity = 0.85;
active-opacity = 0.90;
#frame-opacity = 0.87;

inactive-opacity-override = true;

opacity-rule = [ 
	"100:class_g = 'Firefox-esr'",
	"100:class_g = 'Eog'",
	"100:class_g = 'Io.github.celluloid_player.Celluloid'",
	"95:class_g = 'Com.github.johnfactotum.Foliate'",
	"95:class_g = 'evince'",
	"100:class_g = 'Chromium'",
	"97:class_g = 'ulauncher'",
	"100:class_g = 'Gimp-2.10'",
	"100:class_g = 'Virt-manager'"
	#"0:_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'"
	]; 

#################################
#
# Blur settings
#
#################################

# Dim inactive windows. (0.0 - 1.0)
inactive-dim = 0.2;

# Do not let dimness adjust based on window opacity.
# inactive-dim-fixed = true;
blur-background = true;
blur-size = 12
blur-strength = 3
blur-background-frame = false;
#blur-method = "dual_kawase";
blur-background-fixed = false;
blur-background-exclude = [
    "window_type = 'desktop'",
    "class_g ?= 'ulauncher'",
    "class_g ?= 'plank'",
	"_GTK_FRAME_EXTENTS@:c"
];


#################################
#
# Fading
#
#################################

# Fade windows during opacity changes.
fading = true;
# The time between steps in a fade in milliseconds. (default 10).
fade-delta = 8
# Opacity change between steps while fading in. (default 0.028).
fade-in-step = 0.03;
# Opacity change between steps while fading out. (default 0.03).
fade-out-step = 0.03;

#################################
#
# Other
#
#################################

# Try to detect WM windows and mark them as active.
mark-wmwin-focused = true;
# Mark all non-WM but override-redirect windows active (e.g. menus).
mark-ovredir-focused = true;
# Use EWMH _NET_WM_ACTIVE_WINDOW to determine which window is focused instead of using FocusIn/Out events.
# Usually more reliable but depends on a EWMH-compliant WM.
use-ewmh-active-win = true;
no-ewmh-fullscreen = true;


#################################
#
# Rounded corners
#
#################################

# Detect rounded corners and treat them as rectangular when --shadow-ignore-shaped is on.
detect-rounded-corners = true;

shadow-ignore-shaped = false;

rounded-corners-exclude = [
	"class_g = 'Polybar'",	
	"class_g = 'Dunst'"	
]


# Vertical synchronization: match the refresh rate of the monitor
# this breaks transparency in virtualbox - put a "#" before next line to fix that
vsync = true;

# Enable DBE painting mode, intended to use with VSync to (hopefully) eliminate tearing.
# Reported to have no effect, though.
dbe = false;

# Limit picom to repaint at most once every 1 / refresh_rate second to boost performance.
# This should not be used with --vsync drm/opengl/opengl-oml as they essentially does --sw-opti's job already,
# unless you wish to specify a lower refresh rate than the actual value.
#sw-opti = true;

# Unredirect all windows if a full-screen opaque window is detected, to maximize performance for full-screen windows, like games.
# Known to cause flickering when redirecting/unredirecting windows.
unredir-if-possible = true;

# Specify a list of conditions of windows that should always be considered focused.
focus-exclude = [ ];

# Use WM_TRANSIENT_FOR to group windows, and consider windows in the same group focused at the same time.
#detect-transient = true;
# Use WM_CLIENT_LEADER to group windows, and consider windows in the same group focused at the same time.
# WM_TRANSIENT_FOR has higher priority if --detect-transient is enabled, too.
detect-client-leader = true;

#################################
#
# Window type settings

#################################

wintypes:
{
  normal = {shadow = true;}
  tooltip = { fade = true; shadow = true; opacity = 0.75; focus = true; full-shadow = false; };
  dock = { shadow = false; clip-shadow-above = true; }
  dnd = { shadow = false; }
  popup_menu = { opacity = 1.00; }
  dropdown_menu = { opacity = 0.95; }
  toolbar = { fade = false; opacity = 0.95; }
};

# XSync
xrender-sync-fence = true;

